[{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"Apache License","title":"Apache License","text":"Version 2.0, January 2004 <http://www.apache.org/licenses/>","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_1-definitions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"1. Definitions","title":"Apache License","text":"“License” shall mean terms conditions use, reproduction, distribution defined Sections 1 9 document. “Licensor” shall mean copyright owner entity authorized copyright owner granting License. “Legal Entity” shall mean union acting entity entities control, controlled , common control entity. purposes definition, “control” means () power, direct indirect, cause direction management entity, whether contract otherwise, (ii) ownership fifty percent (50%) outstanding shares, (iii) beneficial ownership entity. “” (“”) shall mean individual Legal Entity exercising permissions granted License. “Source” form shall mean preferred form making modifications, including limited software source code, documentation source, configuration files. “Object” form shall mean form resulting mechanical transformation translation Source form, including limited compiled object code, generated documentation, conversions media types. “Work” shall mean work authorship, whether Source Object form, made available License, indicated copyright notice included attached work (example provided Appendix ). “Derivative Works” shall mean work, whether Source Object form, based (derived ) Work editorial revisions, annotations, elaborations, modifications represent, whole, original work authorship. purposes License, Derivative Works shall include works remain separable , merely link (bind name) interfaces , Work Derivative Works thereof. “Contribution” shall mean work authorship, including original version Work modifications additions Work Derivative Works thereof, intentionally submitted Licensor inclusion Work copyright owner individual Legal Entity authorized submit behalf copyright owner. purposes definition, “submitted” means form electronic, verbal, written communication sent Licensor representatives, including limited communication electronic mailing lists, source code control systems, issue tracking systems managed , behalf , Licensor purpose discussing improving Work, excluding communication conspicuously marked otherwise designated writing copyright owner “Contribution.” “Contributor” shall mean Licensor individual Legal Entity behalf Contribution received Licensor subsequently incorporated within Work.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_2-grant-of-copyright-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"2. Grant of Copyright License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable copyright license reproduce, prepare Derivative Works , publicly display, publicly perform, sublicense, distribute Work Derivative Works Source Object form.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_3-grant-of-patent-license","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"3. Grant of Patent License","title":"Apache License","text":"Subject terms conditions License, Contributor hereby grants perpetual, worldwide, non-exclusive, -charge, royalty-free, irrevocable (except stated section) patent license make, made, use, offer sell, sell, import, otherwise transfer Work, license applies patent claims licensable Contributor necessarily infringed Contribution(s) alone combination Contribution(s) Work Contribution(s) submitted. institute patent litigation entity (including cross-claim counterclaim lawsuit) alleging Work Contribution incorporated within Work constitutes direct contributory patent infringement, patent licenses granted License Work shall terminate date litigation filed.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_4-redistribution","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"4. Redistribution","title":"Apache License","text":"may reproduce distribute copies Work Derivative Works thereof medium, without modifications, Source Object form, provided meet following conditions: () must give recipients Work Derivative Works copy License; (b) must cause modified files carry prominent notices stating changed files; (c) must retain, Source form Derivative Works distribute, copyright, patent, trademark, attribution notices Source form Work, excluding notices pertain part Derivative Works; (d) Work includes “NOTICE” text file part distribution, Derivative Works distribute must include readable copy attribution notices contained within NOTICE file, excluding notices pertain part Derivative Works, least one following places: within NOTICE text file distributed part Derivative Works; within Source form documentation, provided along Derivative Works; , within display generated Derivative Works, wherever third-party notices normally appear. contents NOTICE file informational purposes modify License. may add attribution notices within Derivative Works distribute, alongside addendum NOTICE text Work, provided additional attribution notices construed modifying License. may add copyright statement modifications may provide additional different license terms conditions use, reproduction, distribution modifications, Derivative Works whole, provided use, reproduction, distribution Work otherwise complies conditions stated License.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_5-submission-of-contributions","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"5. Submission of Contributions","title":"Apache License","text":"Unless explicitly state otherwise, Contribution intentionally submitted inclusion Work Licensor shall terms conditions License, without additional terms conditions. Notwithstanding , nothing herein shall supersede modify terms separate license agreement may executed Licensor regarding Contributions.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_6-trademarks","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"6. Trademarks","title":"Apache License","text":"License grant permission use trade names, trademarks, service marks, product names Licensor, except required reasonable customary use describing origin Work reproducing content NOTICE file.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_7-disclaimer-of-warranty","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"7. Disclaimer of Warranty","title":"Apache License","text":"Unless required applicable law agreed writing, Licensor provides Work (Contributor provides Contributions) “” BASIS, WITHOUT WARRANTIES CONDITIONS KIND, either express implied, including, without limitation, warranties conditions TITLE, NON-INFRINGEMENT, MERCHANTABILITY, FITNESS PARTICULAR PURPOSE. solely responsible determining appropriateness using redistributing Work assume risks associated exercise permissions License.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_8-limitation-of-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"8. Limitation of Liability","title":"Apache License","text":"event legal theory, whether tort (including negligence), contract, otherwise, unless required applicable law (deliberate grossly negligent acts) agreed writing, shall Contributor liable damages, including direct, indirect, special, incidental, consequential damages character arising result License use inability use Work (including limited damages loss goodwill, work stoppage, computer failure malfunction, commercial damages losses), even Contributor advised possibility damages.","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"id_9-accepting-warranty-or-additional-liability","dir":"","previous_headings":"Terms and Conditions for use, reproduction, and distribution","what":"9. Accepting Warranty or Additional Liability","title":"Apache License","text":"redistributing Work Derivative Works thereof, may choose offer, charge fee , acceptance support, warranty, indemnity, liability obligations /rights consistent License. However, accepting obligations, may act behalf sole responsibility, behalf Contributor, agree indemnify, defend, hold Contributor harmless liability incurred , claims asserted , Contributor reason accepting warranty additional liability. END TERMS CONDITIONS","code":""},{"path":"https://pharmaverse.github.io/admiralci/LICENSE.html","id":"appendix-how-to-apply-the-apache-license-to-your-work","dir":"","previous_headings":"","what":"APPENDIX: How to apply the Apache License to your work","title":"Apache License","text":"apply Apache License work, attach following boilerplate notice, fields enclosed brackets [] replaced identifying information. (Don’t include brackets!) text enclosed appropriate comment syntax file format. also recommend file class name description purpose included “printed page” copyright notice easier identification within third-party archives.","code":"Copyright 2021 F. Hoffmann-La Roche AG and GlaxoSmithKline LLC  Licensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License. You may obtain a copy of the License at    http://www.apache.org/licenses/LICENSE-2.0  Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License."},{"path":"https://pharmaverse.github.io/admiralci/articles/cheatsheet.html","id":"cheatsheet","dir":"Articles","previous_headings":"","what":"Cheatsheet","title":"cheatsheet","text":"(Please Download cheatsheet access embedded links).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"style-workflow","dir":"Articles","previous_headings":"","what":"Style Workflow","title":"Check R latest version","text":"GitHub Actions workflow checks enforces coding style using styler R files. workflow triggered manually (workflow_dispatch) can also invoked workflow call (workflow_call).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"workflow-structure","dir":"Articles","previous_headings":"Style Workflow","what":"Workflow Structure","title":"Check R latest version","text":"workflow consists single job: check-r-release.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"check-r-release-job","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure","what":"check-r-release Job","title":"Check R latest version","text":"job get latest R tag (checking dockerhub container registry). workflow mainly admiralci developers warned new version R released (manual update OLD_RELEASE env variable need done). Note: latest R tag different OLD_RELEASE job end-fail status.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"inputs","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure > check-r-release Job","what":"Inputs","title":"Check R latest version","text":"r-version: version R use. Default ‘release’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"steps","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure > check-r-release Job","what":"Steps","title":"Check R latest version","text":"List rocker/rstudio tags: Request dockerhub registry list available tags. apply regexp pattern retrieve tags ^[0-9]+\\.[0-9]+$ pattern, take highest tag. workflow_dispatch: Manually triggered workflow optional inputs. schedule: Run every sunday midnight UTC.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-r-tags.html","id":"permissions","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure","what":"Permissions","title":"Check R latest version","text":"contents: write: Write permissions repository contents.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"check-templates-workflow","dir":"Articles","previous_headings":"","what":"Check Templates Workflow","title":"Check Templates","text":"GitHub Actions workflow designed check templates R package. utilizes matrix strategy test different versions R.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"r-version","dir":"Articles","previous_headings":"Check Templates Workflow > Inputs","what":"r-version","title":"Check Templates","text":"Description: version R use testing. Default: ‘4.1’ Options: ‘4.1’, ‘4.2’, ‘4.3’ Required: ","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"workflow-triggers","dir":"Articles","previous_headings":"Check Templates Workflow","what":"Workflow Triggers","title":"Check Templates","text":"workflow triggered two ways: Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. triggered manually, can specify R version use. Workflow Call: workflow can also triggered another workflow using “workflow_call” event. R version input event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"workflow-setup","dir":"Articles","previous_headings":"Check Templates Workflow","what":"Workflow Setup","title":"Check Templates","text":"Name: Check Templates Concurrency: Templates checked concurrently based branch pull request number.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"job-check_templates","dir":"Articles","previous_headings":"Check Templates Workflow","what":"Job: check_templates","title":"Check Templates","text":"job verifies templates R package. runs docker container instance using admiralci images (ghcr.io/pharmaverse/admiralci-${{ inputs.r-version }}:latest) R environment.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"boilerplate-steps","dir":"Articles","previous_headings":"Check Templates Workflow > Job: check_templates > Steps","what":"Boilerplate Steps","title":"Check Templates","text":"steps perform initial setup, checking repository, normalizing inputs, restoring cache. Get branch names: Retrieves branch names processing. Checkout repo (PR): Checks repository pull requests. Checkout repository: Checks repository non-pull request events. Add safe directory: Adds safe directory configuration. Normalize inputs: Normalizes input values, including determining R version branch.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"staged-dependencies","dir":"Articles","previous_headings":"Check Templates Workflow > Job: check_templates > Steps","what":"Staged Dependencies","title":"Check Templates","text":"steps handle staged dependencies, including cache restoration running staged dependencies action. Restore cache: Restores cache staged dependencies. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image)","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/check-templates.html","id":"install-and-run-templates","dir":"Articles","previous_headings":"Check Templates Workflow > Job: check_templates > Steps","what":"Install and Run Templates","title":"Check Templates","text":"Install package: Builds installs R package. Run Template Scripts: Reads package description, identifies template scripts, executes . script fails, workflow stops provides error message.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"code-coverage-workflow","dir":"Articles","previous_headings":"","what":"Code Coverage Workflow","title":"Code Coverage","text":"GitHub Actions workflow designed testing generating code coverage reports R package. uses matrix strategy test different versions R includes options skip code coverage badge creation. workflow measures code coverage unit tests reports code coverage percentage total number lines covered unit tests vs. total number lines codebase. [covr][covr] R package used calculate coverage. Report summaries badges coverage generated using series GitHub Actions. workflow execute successfully, need create orphan branch called badges GitHub repository. can using following steps:","code":"# Create orphan branch git checkout --orphan badges # Back up files mv .git /tmp/.git-backup # Remove everything else rm -rf * .* # Restore git files mv /tmp/.git-backup .git # Create a README file echo \"# Badges\" > README.md # Add, commit and push your new branch git add . && git commit -m \"Init badges\" && git push origin badges"},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"r-version","dir":"Articles","previous_headings":"Code Coverage Workflow > Inputs","what":"r-version","title":"Code Coverage","text":"Description: version R use testing. Default: ‘4.1’ Options: ‘4.1’, ‘4.2’, ‘4.3’ Required: ","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"skip-coverage-badges","dir":"Articles","previous_headings":"Code Coverage Workflow > Inputs","what":"skip-coverage-badges","title":"Code Coverage","text":"Description: Skip code coverage badge creation. Default: false Required: Type: boolean","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"workflow-triggers","dir":"Articles","previous_headings":"Code Coverage Workflow","what":"Workflow Triggers","title":"Code Coverage","text":"workflow triggered two ways: Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. triggered manually, can specify R version choose skip code coverage badge creation. Workflow Call: workflow can also triggered another workflow using “workflow_call” event. R version skip-coverage-badges options inputs event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"workflow-setup","dir":"Articles","previous_headings":"Code Coverage Workflow","what":"Workflow Setup","title":"Code Coverage","text":"Name: Code Coverage Concurrency: Code coverage jobs organized pull request number branch. Cancel--progress: Allows canceling -progress code coverage jobs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"job-coverage","dir":"Articles","previous_headings":"Code Coverage Workflow","what":"Job: coverage","title":"Code Coverage","text":"job verifies templates R package. runs docker container instance using admiralci images (ghcr.io/pharmaverse/admiralci-${{ inputs.r-version }}:latest) R environment.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"boilerplate-steps","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: coverage > Steps","what":"Boilerplate Steps","title":"Code Coverage","text":"Get branch names: Retrieves branch names processing. Checkout repo (PR): Checks repository pull requests. Checkout repository: Checks repository non-pull request events. Normalize inputs: Normalizes input values, including determining R version.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"staged-dependencies","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: coverage > Steps","what":"Staged Dependencies","title":"Code Coverage","text":"Restore cache: Restores cache staged dependencies. Setup Pandoc: Sets Pandoc documentation rendering. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image)","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"run-coverage","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: coverage > Steps","what":"Run Coverage","title":"Code Coverage","text":"Run coverage: Runs code coverage tests, generates coverage reports, outputs coverage percentage.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"check-coverage-reports","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: coverage > Steps","what":"Check Coverage Reports","title":"Code Coverage","text":"Check whether coverage reports exist: Checks existence coverage reports. Set coverage percentage output: Sets coverage percentage output variable. Generate Coverage Summary Report: Generates coverage summary report, adds badges, uploads report review.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"add-coverage-pr-comment","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: coverage > Steps","what":"Add Coverage PR Comment","title":"Code Coverage","text":"Add Coverage PR Comment: Adds comment pull request coverage summary.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"job-badge","dir":"Articles","previous_headings":"Code Coverage Workflow","what":"Job: badge","title":"Code Coverage","text":"job generates code coverage badge commits repository. triggered completion coverage job.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/code-coverage.html","id":"steps-1","dir":"Articles","previous_headings":"Code Coverage Workflow > Job: badge","what":"Steps","title":"Code Coverage","text":"Checkout badges branch repo: Checks badges branch badge updates. Generate badge SVG image: Generates code coverage badge SVG image. Commit badge: Commits updated badge badges branch. Push badges: Pushes changes badges branch.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/common_structure.html","id":"r-version-input","dir":"Articles","previous_headings":"Common structure of the workflows","what":"R-version input","title":"Common Structure","text":"workflows, need select specific R version. ’s actions r-version input: default, r-version=release, users can also use devel latest versions. release means using latest stable version R. oldrel means using previous release R (example current release 4.4, oldrel 4.3). devel refers development version R, contains latest changes features still development. version typically used developers want test new features. “devel” version may less stable.","code":"inputs:     r-version:       description: 'The version of R to use'       default: 'release'       required: false       type: choice       options:         - devel         - oldrel"},{"path":"https://pharmaverse.github.io/admiralci/articles/common_structure.html","id":"use-of-admiralci-docker-images","dir":"Articles","previous_headings":"Common structure of the workflows","what":"Use of admiralci docker images","title":"Common Structure","text":"r-version picked, worfklows run inside docker container instance. Indeed, admiralci contains action push-docker-image, able build rocker:rstudio images available version R : admiralci-oldrelease admiralci-release admiralci-devel images stored admiralci ghcr (Github Container Registry - Place store docker images), reused execute workflows docker container instances like : (details docker images creation process, please read Push Docker Images) workflow documentation).","code":"container:     image: \"ghcr.io/pharmaverse/admiralci-${{ inputs.r-version }}:latest\""},{"path":"https://pharmaverse.github.io/admiralci/articles/common_structure.html","id":"checkout-repository","dir":"Articles","previous_headings":"Common structure of the workflows","what":"Checkout repository","title":"Common Structure","text":"action used checkout right repository. step commonly used github actions able access repository tree.","code":"- name: Checkout repository   uses: actions/checkout@v3"},{"path":"https://pharmaverse.github.io/admiralci/articles/common_structure.html","id":"staged-dependencies","dir":"Articles","previous_headings":"Common structure of the workflows","what":"Staged dependencies","title":"Common Structure","text":"staged dependencies action allow install every necessary upstream dependencies admiral package, : pharmaversesdtm (SDTM test data) admiraldev (utilities functions Admiral package family) (note dependencies refered inside staged_dependencies.yml file) details staged.dependencies, please visit links : Staged Dependencies Package Staged Dependencies Action (Github action use Staged Dependencies package github workflows) Note : user can specify parameters depending use case : - run-system-dependencies : install sys dependencies - renv-restore : restore renv.lock dependencies (many options can find Staged Dependencies Action documentation).","code":"- name: Run Staged dependencies     uses: insightsengineering/staged-dependencies-action@v1     with:         run-system-dependencies: false         renv-restore: false     env:         GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}"},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"cran-status-workflow","dir":"Articles","previous_headings":"","what":"CRAN Status Workflow","title":"CRAN Status","text":"GitHub Actions workflow checks CRAN status R package. can create issue specified statuses (‘NOTE’, ‘WARN’, ‘ERROR’) reported check report. Note : workflow using insightsEngineering Cran Status Monitor action.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"issue-assignees","dir":"Articles","previous_headings":"CRAN Status Workflow > Inputs","what":"issue-assignees","title":"CRAN Status","text":"Description: issue assigned errors encountered CRAN status checks? comma-separated string GitHub usernames. undefined empty, assignments made. Default: ’’ Required: Type: string","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"statuses","dir":"Articles","previous_headings":"CRAN Status Workflow > Inputs","what":"statuses","title":"CRAN Status","text":"Description: Create issue one following statuses reported check report. comma-separated string statuses. Allowed statuses ‘NOTE’, ‘WARN’, ‘ERROR’. Default: ‘ERROR’ Required: Type: string","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"path","dir":"Articles","previous_headings":"CRAN Status Workflow > Inputs","what":"path","title":"CRAN Status","text":"Description: Path R package root, package top level repository. Default: ‘.’ Required: Type: string","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"workflow-triggers","dir":"Articles","previous_headings":"CRAN Status Workflow","what":"Workflow Triggers","title":"CRAN Status","text":"workflow triggered two ways: Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. triggered manually, can specify issue-assignees, statuses, path. Workflow Call: workflow can also triggered another workflow using “workflow_call” event. issue-assignees, statuses, path inputs event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"workflow-setup","dir":"Articles","previous_headings":"CRAN Status Workflow","what":"Workflow Setup","title":"CRAN Status","text":"Permissions: write-Concurrency: CRAN status jobs organized pull request number branch. Cancel--progress: Allows canceling -progress CRAN status jobs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"job-cran-status","dir":"Articles","previous_headings":"CRAN Status Workflow","what":"Job: cran-status","title":"CRAN Status","text":"job checks CRAN status R package. runs latest version Ubuntu uses rocker/tidyverse:latest Docker container.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/cran-status.html","id":"steps","dir":"Articles","previous_headings":"CRAN Status Workflow > Job: cran-status","what":"Steps","title":"CRAN Status","text":"Run CRAN Status Action: Runs CRAN Status Action specified inputs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Codespaces","text":"article go following: codespaces, using Admiral, use . codespaces built (section concerns admiralci developers able maintain codespaces - ’s needed use codespaces, interesting users want learn admiral CI/CD processes). Go watch codespaces demo !","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"what-are-codespaces-and-why-are-we-using-it-for-admiral","dir":"Articles","previous_headings":"Introduction > What are codespaces and how to use them","what":"What are codespaces, and why are we using it for Admiral ?","title":"Codespaces","text":"Codespaces development environments hosted cloud. environment running virtual machines can customized. admiral setup custom codespaces admiral dependencies installed (system dependencies, renv.lock files packages, staged dependencies staged_dependencies.yaml file). every contributors admiral can use codespaces run Rstudio web browsers development environment, without install locally every dependencies, without compatibility problem local machines / operating system.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"create-a-codespace","dir":"Articles","previous_headings":"Introduction > What are codespaces and how to use them > How to use codespaces","what":"Create a codespace","title":"Codespaces","text":"main repository, go <> Code menu -> Codespaces -> ... -> + New options.  menu appear :  Go Dev container configuration drop-menu, select codespaces wished (can choose several R versions). Note: Pressing directly + button automatically create codespace latest R version available (4.2).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"accessing-rstudio","dir":"Articles","previous_headings":"Introduction > What are codespaces and how to use them > How to use codespaces","what":"Accessing Rstudio","title":"Codespaces","text":"open rstudio browser, type rstudio current terminal. script wait rstudio server ready, display url terminal. Known issue: Sometimes ports automatically forwarded codespace creation. problems trying access rstudio url, check PORTS section vscode :  don’t see 8787 port, need manually add (using “Add Port” button).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"usage-limit-pricing","dir":"Articles","previous_headings":"Introduction > What are codespaces and how to use them","what":"Usage limit / Pricing","title":"Codespaces","text":"following storage core hours usage included, free charge, personal accounts: Storage per month:15 GB Core hours per month: 120 Storage per month:20 GB Core hours per month: 180 details, see github codespaces billing","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"base-docker-image","dir":"Articles","previous_headings":"Introduction > Codespaces building process (for admiralci developers)","what":"Base docker image","title":"Codespaces","text":"codespaces using base docker image. image located inside admiralci container registry. Admiral configured used several versions R. versions defined renv/profiles folder (associated renv.lock file). Therefore, docker image available R_VERSION named admiralci-{R_VERSION}. Note building step images described . codespace configuration available R_VERSION, based associated docker image admiralci-{R_VERSION}.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"devcontainer-json-files","dir":"Articles","previous_headings":"Introduction > Codespaces building process (for admiralci developers)","what":".devcontainer.json files","title":"Codespaces","text":"Codespaces configuration defined .devcontainer.json files (inside .devcontainer folder). .devcontainer.json file defined R version. Every json fields described : https://containers.dev/implementors/json_reference/. case using following configuration: name : Name devcontainer displayed web browser image : Base docker image codespace (case ghcr admiralci based image) features: (see https://github.com/rocker-org/devcontainer-features every available features rocker containers). use r-rig feature install R dependencies + vscode requirements. customizations: used customize IDE (vscode) settings. forwardPorts / portsAttributes: Rstudio ports configuration. updateContentCommand: used run staged.dependencies installation (details see staged dependencies doc) postCreateCommand: command launched container creation (case activate proper R profile renv/profiles folder). Note Commands postCreateCommand, updateContentCommand (also onCreateCommand used ) always run finalize container setup. run following order : onCreateCommand > updateContentCommand > postCreateCommand.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"prebuild-codespaces","dir":"Articles","previous_headings":"Introduction > Codespaces building process (for admiralci developers)","what":"Prebuild codespaces","title":"Codespaces","text":"settings -> codespaces, can see “Set prebuild”. feature allow prebuild codespaces able speed users codespaces creation. main configuration menu, branch containing codespaces selected, drop-menu user can select one .devcontainer.json configuration. also “prebuild triggers” menu configure run prebuild given .devcontainer.json file. every admiralci codespace choose “configuration change” trigger.  user creating codespace, see message “prebuild ready” - speed-codespace creation.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"propagation","dir":"Articles","previous_headings":"Introduction > Codespaces building process (for admiralci developers)","what":"Propagation","title":"Codespaces","text":"time change detected inside .devcontainer folder, propagation job triggered.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/docker_and_codespaces.html","id":"improvement-ideas","dir":"Articles","previous_headings":"Introduction > Codespaces building process (for admiralci developers)","what":"Improvement ideas","title":"Codespaces","text":"can see every .devcontainer.json files structure. variant based docker image depending R version. define action CI/CD workflow auto-generate .devcontainer files based renv/profile folder.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/links.html","id":"check-urls-workflow","dir":"Articles","previous_headings":"","what":"Check URLs Workflow","title":"Links","text":"GitHub Actions workflow checks URLs documentation files. runs main, pre-release branches push events specified pull request events.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/links.html","id":"workflow-triggers","dir":"Articles","previous_headings":"Check URLs Workflow","what":"Workflow Triggers","title":"Links","text":"workflow triggered following ways: Push Events: Triggered pushes main, pre-release branches. Pull Request Events: Triggered pull requests opened, synchronized, reopened, ready review main, pre-release branches. Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. Workflow Call: workflow can also triggered another workflow using “workflow_call” event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/links.html","id":"workflow-setup","dir":"Articles","previous_headings":"Check URLs Workflow","what":"Workflow Setup","title":"Links","text":"Concurrency: URL check jobs organized pull request number branch. Cancel--progress: Allows canceling -progress URL check jobs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/links.html","id":"job-links","dir":"Articles","previous_headings":"Check URLs Workflow","what":"Job: links","title":"Links","text":"job validates URLs documentation files. runs Ubuntu 20.04.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/links.html","id":"steps","dir":"Articles","previous_headings":"Check URLs Workflow > Job: links","what":"Steps","title":"Links","text":"Checkout repo: Checks repository. Check URLs docs: Uses lycheeverse/lychee-action check URLs documentation files. excludes private URLs, GitHub repository URLs, additional specified patterns. fail: true (Fails workflow broken links found) jobSummary: true (Provides summary link check results) format: markdown (Outputs results markdown format) output: links-results.md (Saves link check results file) args: Additional arguments link checking (includes exclusion patterns file extensions) GITHUB_TOKEN: GitHub token authentication. Note: ’s possible ignore links checks using .lycheeignore file.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"lint-workflow","dir":"Articles","previous_headings":"","what":"Lint Workflow","title":"LintR","text":"GitHub Actions workflow performs linting tasks R package. runs docker container instance using admiralci images (ghcr.io/pharmaverse/admiralci-${{ inputs.r-version }}:latest) R environment.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"workflow-triggers","dir":"Articles","previous_headings":"Lint Workflow","what":"Workflow Triggers","title":"LintR","text":"workflow triggered following ways: Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. Workflow Call: workflow can also triggered another workflow using “workflow_call” event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"workflow-inputs","dir":"Articles","previous_headings":"Lint Workflow","what":"Workflow Inputs","title":"LintR","text":"workflow accepts following inputs manual dispatch workflow call: r-version: version R use, options ‘4.1’, ‘4.2’, ‘4.3’. lint--files: Boolean indicating whether lint files every time. latest-lintr: Boolean indicating whether install latest lintr CRAN release. install-package: Boolean indicating whether install R package locally.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"workflow-setup","dir":"Articles","previous_headings":"Lint Workflow","what":"Workflow Setup","title":"LintR","text":"Concurrency: Lint jobs organized pull request number branch. Cancel--progress: Allows canceling -progress lint jobs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"job-lint","dir":"Articles","previous_headings":"Lint Workflow","what":"Job: lint","title":"LintR","text":"job performs linting tasks.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/lintr.html","id":"steps","dir":"Articles","previous_headings":"Lint Workflow > Job: lint","what":"Steps","title":"LintR","text":"Get branch names: Gets branch names using tj-actions/branch-names action. Checkout repo (PR): Checks repository pull requests. Checkout repository: Checks repository non-pull request events. Normalize inputs: Normalizes R version input. Restore cache: Restores cache staged dependencies. Run Staged dependencies: Runs staged dependencies action set environment. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Install latest release lintr: Installs latest release lintr CRAN repository specified. Install package: Installs R package locally specified. Changed files: Gets list changed files using Ana06/get-changed-files action. Lint: Performs linting using lintr R package. Excludes files based changed files list. Error lints detected: Raises error lints detected, prompting review adjustment code. Note : .lintr file can configured upstream repository level, able example exclude lint rules example :","code":"exclusions: list(     \"R/data.R\" = Inf,     \"inst\" = list(undesirable_function_linter = Inf),     \"vignettes\" = list(undesirable_function_linter = Inf)   )"},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"man-pages-workflow","dir":"Articles","previous_headings":"","what":"Man Pages Workflow","title":"Man Pages","text":"GitHub Actions workflow designed generating checking man pages R package using Roxygen. uses matrix strategy test different versions R.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"r-version","dir":"Articles","previous_headings":"Man Pages Workflow > Inputs","what":"r-version","title":"Man Pages","text":"Description: version R use testing. Default: ‘4.1’ Options: ‘4.1’, ‘4.2’, ‘4.3’ Required: ","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"workflow-triggers","dir":"Articles","previous_headings":"Man Pages Workflow","what":"Workflow Triggers","title":"Man Pages","text":"workflow triggered two ways: Manual Dispatch: can manually trigger workflow using “workflow_dispatch” event. triggered manually, can specify R version. Workflow Call: workflow can also triggered another workflow using “workflow_call” event. R version input event.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"workflow-setup","dir":"Articles","previous_headings":"Man Pages Workflow","what":"Workflow Setup","title":"Man Pages","text":"Name: Man Pages Concurrency: Man page jobs organized pull request number branch. Cancel--progress: Allows canceling -progress man page jobs.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"job-lint","dir":"Articles","previous_headings":"Man Pages Workflow","what":"Job: lint","title":"Man Pages","text":"job runs Roxygen generate check man pages R package. runs docker container instance using admiralci images (ghcr.io/pharmaverse/admiralci-${{ inputs.r-version }}:latest) R environment.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"boilerplate-steps","dir":"Articles","previous_headings":"Man Pages Workflow > Job: lint > Steps","what":"Boilerplate Steps","title":"Man Pages","text":"Get branch names: Retrieves branch names processing. Checkout repo (PR): Checks repository pull requests. Checkout repository: Checks repository non-pull request events. Normalize inputs: Normalizes input values, including determining R version. Restore cache: Restores cache staged dependencies. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image)","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/man-pages.html","id":"roxygen-workflow","dir":"Articles","previous_headings":"Man Pages Workflow > Job: lint > Steps","what":"Roxygen Workflow","title":"Man Pages","text":"Generate man pages: Runs roxygen2::roxygenize() generate man pages. Set-safe dir: Sets safe directory git configuration. Roxygen check: Checks manuals --date Roxygen comments provides guidance differences found. differences found, workflow fail, giving cmd run admiral devs : roxygen2::roxygenize('.', roclets = c('rd', 'collate', 'namespace'))","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/pkgdown.html","id":"pkgdown-workflow","dir":"Articles","previous_headings":"","what":"pkgdown Workflow","title":"pkgdown","text":"GitHub Actions workflow automates generation deployment documentation R package using pkgdown. workflow supports multiple versions offers flexibility customization. workflow uses rmarkdown able generate html documentation Rmd files (vignettes folder). documentation stored gh-pages branch (orphan branch) published. Note : workflow using InsightEngineering pkgdown multiversion action action.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/pkgdown.html","id":"required-inputs","dir":"Articles","previous_headings":"pkgdown Workflow > Inputs","what":"Required Inputs","title":"pkgdown","text":"r-version: version R use. Default: ‘4.1’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/pkgdown.html","id":"optional-inputs","dir":"Articles","previous_headings":"pkgdown Workflow > Inputs","what":"Optional Inputs","title":"pkgdown","text":"skip-multiversion-docs: Skip creation multi-version docs. Default: false. set True, subfolder created gh-pages (current github reference (branch/tag) name) multiversion-docs-landing-page: Ref use multiversion docs landing page. Default: main. latest-tag-alt-name: alternate name use ‘latest-tag’ multiversion pkgdown docs. Default: ““. branches--tags--list: Regular expression defining branches tags listed ‘Versions’ dropdown menu. Default: ^main$|^devel$|^pre-release$|^latest-tag$|^cran-release$|^develop$|^v([0-9]+\\\\.)?([0-9]+\\\\.)?([0-9]+)$.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/pkgdown.html","id":"pkgdown-job","dir":"Articles","previous_headings":"pkgdown Workflow > Workflow Structure","what":"pkgdown Job","title":"pkgdown","text":"job runs pkgdown process generate documentation. checks [skip docs] commit message , present, proceeds documentation generation. documentation includes additional script fix rdrr.io links pharmaverse packages.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/pkgdown.html","id":"multi-version-docs-job","dir":"Articles","previous_headings":"pkgdown Workflow > Workflow Structure","what":"multi-version-docs Job","title":"pkgdown","text":"job, triggered, deploys multi-version documentation gh-pages branch. checks skip-multiversion-docs input [skip docs] commit message proceeding.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/propagate.html","id":"propagate--devcontainer-files-workflow","dir":"Articles","previous_headings":"","what":"Propagate .devcontainer Files Workflow","title":"Propagate","text":"GitHub Actions workflow specific admiralci project. designed propagate changes .devcontainer files (codespaces configuration) multiple repositories within project.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/propagate.html","id":"triggers","dir":"Articles","previous_headings":"Propagate .devcontainer Files Workflow > Inputs","what":"Triggers","title":"Propagate","text":"pull_request: Triggered pull requests targeting main branch specific file paths. workflow_dispatch: Allows manual triggering workflow.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/propagate.html","id":"steps","dir":"Articles","previous_headings":"Propagate .devcontainer Files Workflow > Inputs","what":"Steps","title":"Propagate","text":"Checkout repo: Checks current repository. Checkout specified repository: Checks specified repository based matrix configuration. Update files specified repository: Updates .devcontainer files specified repository. Commit push changes: Commits changes pushes repository. Create Pull Request: Creates pull request specified repository, assigning reviewers.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/propagate.html","id":"matrix-configuration","dir":"Articles","previous_headings":"Propagate .devcontainer Files Workflow > Inputs","what":"Matrix Configuration","title":"Propagate","text":"propagation job uses matrix strategy iterate specified repositories different configurations. (MR new .devcontainer file created element matrix, associated reviewers field)","code":"repos:   - name: admiralonco     target-branch: main     reviewers: bundfussr, cicdguy   - name: admiraldev     target-branch: main     reviewers: bms63, cicdguy"},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"deploy-docker-image-workflow","dir":"Articles","previous_headings":"","what":"Deploy Docker Image Workflow","title":"Push Docker Images","text":"GitHub Actions workflow automates deployment Docker images based changes DESCRIPTION file. designed run pushes main branch, manual triggers, schedule (every day midnight UTC Wednesdays Sundays). Note : workflow using InsightsEngineering R image creator action.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"matrix","dir":"Articles","previous_headings":"Deploy Docker Image Workflow","what":"Matrix","title":"Push Docker Images","text":"R versions specified matrix parallel execution.","code":"matrix:   r_version: ['release', 'devel', 'oldrel']"},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"workflow-structure","dir":"Articles","previous_headings":"Deploy Docker Image Workflow","what":"Workflow Structure","title":"Push Docker Images","text":"workflow consists three jobs: get_old_release, deploy-image, store_deps.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"get_old_release-job","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure","what":"get_old_release Job","title":"Push Docker Images","text":"job retrieve R version corresponding “oldrelease”. contains simple step parsing OLD_RELEASE env variable. variable set manually (checking actual release version R taking previous version). Another workflow (cron workflow) running admiralci check new release R available (allow admiralci developers check need update OLD_RELEASE variable).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"steps","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure > get_old_release Job","what":"Steps","title":"Push Docker Images","text":"get old release: Retrieves value env variable OLD_RELEASE, store $GITHUB_OUTPUT variables.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"deploy-image-job","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure","what":"deploy-image Job","title":"Push Docker Images","text":"job deploys Docker images based specified configurations. end job, following images created stored admiralci ghcr (github container registry) : admiralci-release admiralci-devel admiralci-oldrel images available admiralci ghcr.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"steps-1","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure > deploy-image Job","what":"Steps","title":"Push Docker Images","text":"Checkout repo: Checks current repository. Set image specs: Retrieves package name, R version, specifications. Call deploy docker image action: Invokes Docker image deployment action R version.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"store_deps-job","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure","what":"store_deps Job","title":"Push Docker Images","text":"job create admiralci release artifacts, docker image ()","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"steps-2","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Workflow Structure > store_deps Job","what":"Steps","title":"Push Docker Images","text":"Store deps CSV file: Retrieves installed packages image, stores CSV file. Upload deps.csv artifact: Uploads CSV file containing dependencies artifact. Delete current release existing artifacts Delete admiralci existing release artifacts (necessary step bellow) Upload SBOM release 🔼 Upload admiralci release artifacts output artifacts available admiralci latest release. artifacts allow developers retrieve versions installed dependencies workflows, ensure reproducibility locally. note dependencies artifacts also produced R CMD CHECKS workflow.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"triggers","dir":"Articles","previous_headings":"Deploy Docker Image Workflow > Inputs","what":"Triggers","title":"Push Docker Images","text":"push: Triggered pushes main branch changes DESCRIPTION. workflow_dispatch: Allows manual triggering workflow. schedule: Runs every day midnight UTC Wednesdays Sundays.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"permissions","dir":"Articles","previous_headings":"Deploy Docker Image Workflow","what":"Permissions","title":"Push Docker Images","text":"write-: Provides write permissions various operations.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/push-docker.html","id":"concurrency","dir":"Articles","previous_headings":"Deploy Docker Image Workflow","what":"Concurrency","title":"Push Docker Images","text":"Concurrency settings specified manage concurrent workflow runs effectively.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"r-cmd-check-workflow","dir":"Articles","previous_headings":"","what":"R CMD Check Workflow","title":"R CMD CHECKS","text":"GitHub Actions workflow performs R CMD checks specified R versions repositories. checks triggered manual dispatch, pushes main branch, pull requests targeting branch.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"workflow-structure","dir":"Articles","previous_headings":"R CMD Check Workflow","what":"Workflow Structure","title":"R CMD CHECKS","text":"workflow consists single job: R-CMD-check.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"r-cmd-check-job","dir":"Articles","previous_headings":"R CMD Check Workflow > Workflow Structure","what":"R-CMD-check Job","title":"R CMD CHECKS","text":"job runs R CMD checks different R versions, leveraging specified CRAN repositories. job conditioned run commit message contains ‘[skip r-cmd-check]’. checks performed parallel specified R version, using Matrix Strategy. Artifacts also produced R version matrix (renv.lock deps.csv). Developers can download artifacts Action summary page able ensure reproducibility (exactly dependencies versions locally).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"inputs","dir":"Articles","previous_headings":"R CMD Check Workflow > Workflow Structure > R-CMD-check Job","what":"Inputs","title":"R CMD CHECKS","text":"error-: Input ‘error_on’ parameter rcmdcheck::rcmdcheck(). Defaults ‘note’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"steps","dir":"Articles","previous_headings":"R CMD Check Workflow > Workflow Structure > R-CMD-check Job","what":"Steps","title":"R CMD CHECKS","text":"Get branch names: Extracts branch names. Checkout repo: Checks repository based event type (push pull request). Restore cache: Restores cached dependencies. Run Staged dependencies: Executes staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Upload dependencies artifacts: Create renv.lock deps.csv file (containing docker image dependencies) Upload deps.csv renv.lock artifacts: Upload renv.lock deps.csv files artifacts. Check Version: Determines package maintenance version. Check: Performs R CMD checks using rcmdcheck::rcmdcheck(). Upload check results: Uploads check results artifact case failure.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"concurrency","dir":"Articles","previous_headings":"R CMD Check Workflow > Workflow Structure","what":"Concurrency","title":"R CMD CHECKS","text":"Concurrency settings specified manage concurrent workflow runs effectively.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"triggers","dir":"Articles","previous_headings":"R CMD Check Workflow > Inputs","what":"Triggers","title":"R CMD CHECKS","text":"workflow_dispatch: Allows manual triggering workflow. workflow_call: Triggered workflow call event. push: Triggered pushes main branch. pull_request: Triggered pull requests targeting main branch.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"matrix","dir":"Articles","previous_headings":"R CMD Check Workflow > Inputs","what":"Matrix","title":"R CMD CHECKS","text":"workflow runs admiralci docker images (depending matrix element r version). R versions specified matrix parallel execution. Note: change soon repos element use CRAN repo (https://cran.r-project.org/)","code":"matrix:   r_version: ['release', 'devel', 'oldrel']"},{"path":"https://pharmaverse.github.io/admiralci/articles/r-cmd-checks.html","id":"permissions","dir":"Articles","previous_headings":"R CMD Check Workflow","what":"Permissions","title":"R CMD CHECKS","text":"write-: Provides write permissions various operations. Note: ’s possible ignore folders/files build process, using .Rbuildignore file.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"render-readme-workflow","dir":"Articles","previous_headings":"","what":"Render README Workflow","title":"Readme Render","text":"GitHub Actions workflow renders README R Markdown (README.Rmd) Markdown (README.md). Additionally, can format generated Markdown using formatter. workflow triggered manually (workflow_dispatch) can also invoked workflow call (workflow_call).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"workflow-structure","dir":"Articles","previous_headings":"Render README Workflow","what":"Workflow Structure","title":"Readme Render","text":"workflow consists single job: render.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"render-job","dir":"Articles","previous_headings":"Render README Workflow > Workflow Structure","what":"render Job","title":"Readme Render","text":"job renders README R Markdown Markdown optionally formats generated Markdown.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"inputs","dir":"Articles","previous_headings":"Render README Workflow > Workflow Structure > render Job","what":"Inputs","title":"Readme Render","text":"r-version: version R use. Default ‘release’. skip-md-formatting: Skip markdown auto-formatting. Default ‘false’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"steps","dir":"Articles","previous_headings":"Render README Workflow > Workflow Structure > render Job","what":"Steps","title":"Readme Render","text":"Get branch names: Extracts branch names. Checkout repo (PR): Checks repository based event type (pull request). Checkout repository: Checks repository events pull requests. Normalize inputs: Normalizes R version input. Restore cache: Restores cached dependencies. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Render README markdown: Renders README.Rmd README.md. Install Markdown formatter: Installs Markdown formatter skipping formatting. Commit push formatted README.md: Commits pushes changes formatted README.md file.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"triggers","dir":"Articles","previous_headings":"Render README Workflow > Workflow Structure","what":"Triggers","title":"Readme Render","text":"workflow_dispatch: Manually triggered workflow optional inputs. workflow_call: Invoked workflow call.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/readme-render.html","id":"permissions","dir":"Articles","previous_headings":"Render README Workflow","what":"Permissions","title":"Readme Render","text":"contents: write: Write permissions repository contents.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"spelling-workflow","dir":"Articles","previous_headings":"","what":"Spelling Workflow","title":"Spellchecks","text":"GitHub Actions workflow performs spellchecking specified R files. workflow triggered manually (workflow_dispatch) can also invoked workflow call (workflow_call).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"workflow-structure","dir":"Articles","previous_headings":"Spelling Workflow","what":"Workflow Structure","title":"Spellchecks","text":"workflow consists single job: spellcheck.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"spellcheck-job","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure","what":"spellcheck Job","title":"Spellchecks","text":"job runs spellcheck R files.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"inputs","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure > spellcheck Job","what":"Inputs","title":"Spellchecks","text":"r-version: version R use. Default ‘release’. exclude: List paths exclude (comma-separated list). Default empty string.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"conditions","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure > spellcheck Job","what":"Conditions","title":"Spellchecks","text":"spellcheck job skipped commit message contains [skip spellcheck].","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"steps","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure > spellcheck Job","what":"Steps","title":"Spellchecks","text":"Get branch names: Extracts branch names. Checkout repo (PR): Checks repository based event type (pull request). Checkout repository: Checks repository events pull requests. Restore cache: Restores cached dependencies. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Run Spellcheck: Executes spellcheck action specified R files.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"triggers","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure","what":"Triggers","title":"Spellchecks","text":"workflow_dispatch: Manually triggered workflow optional inputs. workflow_call: Invoked workflow call.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/spellchecks.html","id":"permissions","dir":"Articles","previous_headings":"Spelling Workflow > Workflow Structure","what":"Permissions","title":"Spellchecks","text":"contents: write: Write permissions repository contents. Note : ’s possible ignore spell checks using inst/WORDLIST file. ’s possible update automatically using directly spelling::update_wordlist()","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"style-workflow","dir":"Articles","previous_headings":"","what":"Style Workflow","title":"Style","text":"GitHub Actions workflow checks enforces coding style using styler R files. workflow triggered manually (workflow_dispatch) can also invoked workflow call (workflow_call).","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"workflow-structure","dir":"Articles","previous_headings":"Style Workflow","what":"Workflow Structure","title":"Style","text":"workflow consists single job: style.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"style-job","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure","what":"style Job","title":"Style","text":"job performs code style checks enforces styling using styler.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"inputs","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure > style Job","what":"Inputs","title":"Style","text":"r-version: version R use. Default ‘release’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"conditions","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure > style Job","what":"Conditions","title":"Style","text":"style check job skipped commit message contains [skip style].","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"steps","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure > style Job","what":"Steps","title":"Style","text":"Get branch names: Extracts branch names. Checkout repo (PR): Checks repository based event type (pull request). Checkout repository: Checks repository events pull requests. Normalize inputs: Normalizes R version input. Restore cache: Restores cached dependencies. Run Staged dependencies: Runs staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Get changed files: Retrieves list changed files. Run styler: Applies styler changed R files checks style violations. violations found, workflow displays relevant information version details (files style violation displayed using git diff running styler workflows)","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"triggers","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure","what":"Triggers","title":"Style","text":"workflow_dispatch: Manually triggered workflow optional inputs. workflow_call: Invoked workflow call.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/style.html","id":"permissions","dir":"Articles","previous_headings":"Style Workflow > Workflow Structure","what":"Permissions","title":"Style","text":"contents: write: Write permissions repository contents. Note: ’s possible fix locally style issues using styler::style_file().","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/tweak-page-hooks.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Custom pkgdown tweak page hooks","text":"article go following: process using custom hooks R packages Example create custom hooks information hooks, please read help(\"getHook\", \"base\"). examples issues can solved tweak html file: Links broken pkgdown site #13","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/tweak-page-hooks.html","id":"custom-hooks","dir":"Articles","previous_headings":"Introduction","what":"Custom hooks","title":"Custom pkgdown tweak page hooks","text":"Currently, pkgdown allow set custom action. However, using custom hooks can apply changes execution using tweak_page() function execute extra code based hook content. reproduce behavior local environment: part executed automatically GitHub CI. developer need define hooks.","code":"pkgdown_env <- asNamespace(\"pkgdown\") rlang::env_unlock(env = pkgdown_env) rlang::env_binding_unlock(env = pkgdown_env) # Modify tweak_page pkgdown_env$call_hook <- function(hook_name, ...) {   # Get hooks from base::getHook   hooks <- getHook(paste0(\"UserHook::admiralci::\", hook_name))   if (!is.list(hooks)) {     hooks <- list(hooks)   }    # Evaluate hooks   purrr::map(hooks, function(fun) {     fun(...)   }) %>%     invisible() } environment(pkgdown_env$call_hook) <- pkgdown_env  tweak_page <- body(pkgdown_env$tweak_page) body(pkgdown_env$tweak_page) <-   as.call(     append(       as.list(tweak_page),       expression(call_hook(\"tweak_page\", html, name, pkg)),       after=length(tweak_page)     )   )  rlang::env_binding_lock(env = pkgdown_env) rlang::env_lock(pkgdown_env)"},{"path":"https://pharmaverse.github.io/admiralci/articles/tweak-page-hooks.html","id":"creating-hooks","dir":"Articles","previous_headings":"Introduction","what":"Creating hooks","title":"Custom pkgdown tweak page hooks","text":"UserHook::admiralci::tweak_page hook defined function. Please note error function stop pkgdown building site. code showing example tweak_page function. convenient way set hook define package .onLoad event.","code":"# Tweak page with special custom hook. setHook(\"UserHook::admiralci::tweak_page\", function(...) {   html <- ..1   name <- ..2   pkg <- ..3       links <- xml2::xml_find_all(html, \".//a\")   if (length(links) == 0)     return(invisible())    hrefs <- xml2::xml_attr(links, \"href\")   needs_tweak <- grepl(\"\\\\.yml$\", hrefs) & xml2::url_parse(hrefs)$scheme == \"\"    fix_links <- function(x) {     x <- gsub(\"^./\", \"\", x)     x <- paste0(\"https://github.com/pharmaverse/admiralci/blob/HEAD/\", x)   }    if (any(needs_tweak)) {     purrr::walk2(       links[needs_tweak],       fix_links(hrefs[needs_tweak]),       xml2::xml_set_attr,       attr = \"href\"     )   }    invisible() })"},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"r-package-validation-report-workflow","dir":"Articles","previous_headings":"","what":"R Package Validation Report Workflow","title":"Validation Report","text":"GitHub Actions workflow generates validation report R package. report triggered manual dispatch, workflow call, publication release. ’s mainly using validatoR downstream action.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"workflow-structure","dir":"Articles","previous_headings":"R Package Validation Report Workflow","what":"Workflow Structure","title":"Validation Report","text":"workflow consists single job: r-pkg-validation.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"r-pkg-validation-job","dir":"Articles","previous_headings":"R Package Validation Report Workflow > Workflow Structure","what":"r-pkg-validation Job","title":"Validation Report","text":"job generates validation report specified version R. report built using thevalidatoR action uploaded release upon success. PDF report attached release within GitHub.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"inputs","dir":"Articles","previous_headings":"R Package Validation Report Workflow > Workflow Structure > r-pkg-validation Job","what":"Inputs","title":"Validation Report","text":"r-version: version R use. Defaults ‘release’.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"steps","dir":"Articles","previous_headings":"R Package Validation Report Workflow > Workflow Structure > r-pkg-validation Job","what":"Steps","title":"Validation Report","text":"Get branch names: Extracts branch names. Checkout repo: Checks repository based event type (push pull request). Normalize inputs: Normalizes input R version, defaulting ‘4.1’ specified. Restore cache: Restores cached dependencies. Run Staged dependencies: Executes staged dependencies action. Install dependencies DESCRIPTION: install dependencies DESCRIPTION (case missing dependencies parent admiralci docker image) Build report: Uses thevalidatoR action build validation report. Upload report release: Uploads validation report release job successful.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"triggers","dir":"Articles","previous_headings":"R Package Validation Report Workflow > Workflow Structure","what":"Triggers","title":"Validation Report","text":"workflow_dispatch: Allows manual triggering workflow option specify R version. workflow_call: Triggered workflow call event option specify R version. release: Triggered publication release.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"concurrency","dir":"Articles","previous_headings":"R Package Validation Report Workflow > Workflow Structure","what":"Concurrency","title":"Validation Report","text":"Concurrency settings specified workflow.","code":""},{"path":"https://pharmaverse.github.io/admiralci/articles/validation.html","id":"permissions","dir":"Articles","previous_headings":"R Package Validation Report Workflow","what":"Permissions","title":"Validation Report","text":"contents: write: Write permissions repository contents. packages: write: Write permissions packages. deployments: write: Write permissions deployments.","code":""},{"path":"https://pharmaverse.github.io/admiralci/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Dinakar Kulkarni. Author. Daphne Grasselly. Author, maintainer. Adam Forys. Author. Franciszek Walkowiak. Author.","code":""},{"path":"https://pharmaverse.github.io/admiralci/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Kulkarni D, Grasselly D, Forys , Walkowiak F (2024). admiralci: CI/CD Workflows Admiral. R package version 0.0.1, https://github.com/pharmaverse/admiralci, https://pharmaverse.github.io/admiralci.","code":"@Manual{,   title = {admiralci: CI/CD Workflows for Admiral},   author = {Dinakar Kulkarni and Daphne Grasselly and Adam Forys and Franciszek Walkowiak},   year = {2024},   note = {R package version 0.0.1, https://github.com/pharmaverse/admiralci},   url = {https://pharmaverse.github.io/admiralci}, }"},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"purpose-of-admiralci","dir":"","previous_headings":"","what":"CI/CD Workflows for Admiral","title":"CI/CD Workflows for Admiral","text":"repository contains GitHub Actions continuous integration/continuous delivery (CI/CD) workflows, used admiral extensions. Workflows defined responsible assuring high package quality standards without compromising performance, security, reproducibility. Please refer .github/workflows directory view source code GitHub Actions workflows. Notes : workflows using github actions InsightsEngineering group. workflows sharing steps (see Common workflows structure) (boilerplate code)","code":""},{"path":[]},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"check-templates","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Check Templates","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"lintr","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Lintr","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"man-pages","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Man Pages","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"r-cmd-checks","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"R CMD CHECKS","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"check-templates-1","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Check Templates","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"code-coverage","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Code Coverage","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"readme-render","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Readme Render","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"style","dir":"","previous_headings":"Workflows triggered by Admiral MR (feature branch to main branch)","what":"Style","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"validation","dir":"","previous_headings":"Workflows trigger by a new release","what":"Validation","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"pkgdown","dir":"","previous_headings":"Workflows trigger by a new release","what":"Pkgdown","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"push-docker-image","dir":"","previous_headings":"cron workflows","what":"Push Docker Image","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"cran-status","dir":"","previous_headings":"cron workflows","what":"Cran Status","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"check-r-tags","dir":"","previous_headings":"cron workflows","what":"Check R Tags","title":"CI/CD Workflows for Admiral","text":"Link workflow code (yml file) Link documentation","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"reuse-recommended","dir":"","previous_headings":"","what":"Reuse (recommended)","title":"CI/CD Workflows for Admiral","text":"add just one file called .github/workflows/common.yml directly import workflows receiving latest updates enhancements, given workflows defined repository reusable via [workflow_call][workflow_call] GitHub Actions event. contents .github/workflows/common.yml file available common.yml.inactive file repository. Feature flags form workflow_call inputs available customization purposes. Feature flags documented file - look env: : hashes file feature flags.","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"copy-as-is-not-recommended","dir":"","previous_headings":"","what":"Copy as-is (not recommended)","title":"CI/CD Workflows for Admiral","text":"Alternatively, want high level customization, simply copy workflows -repository repository modify liking.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"pull-request","dir":"","previous_headings":"Where to see these workflows in action?","what":"Pull Request","title":"CI/CD Workflows for Admiral","text":"bottom pull request, can check status workflow:","code":""},{"path":"https://pharmaverse.github.io/admiralci/index.html","id":"actions-tab","dir":"","previous_headings":"Where to see these workflows in action?","what":"Actions Tab","title":"CI/CD Workflows for Admiral","text":"Alternatively, can check workflows Actions tab repository well: r-lib-actions sd-action sd-repo lychee covr lintr pkgdown multi-version-docs validation spelling styler workflow_call","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/admiralci-package.html","id":null,"dir":"Reference","previous_headings":"","what":"admiralci: ADaM in R Asset Library - CI/CD Workflows — admiralci-package","title":"admiralci: ADaM in R Asset Library - CI/CD Workflows — admiralci-package","text":"set common CI/CD workflows originally designed developed Admiral R package hosted Pharmaverse GitHub organization.","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/reference/admiralci-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"admiralci: ADaM in R Asset Library - CI/CD Workflows — admiralci-package","text":"Maintainer: Open Source admiralci@pharmaverse.com","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":null,"dir":"Reference","previous_headings":"","what":"Derive Extension Example — hello_admiral","title":"Derive Extension Example — hello_admiral","text":"Says hello admiral","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = TRUE)"},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Derive Extension Example — hello_admiral","text":"hw TRUE FALSE","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Derive Extension Example — hello_admiral","text":"Happy Message","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Derive Extension Example — hello_admiral","text":"Something Something","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Derive Extension Example — hello_admiral","text":"Open Source","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/hello_admiral.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Derive Extension Example — hello_admiral","text":"","code":"hello_admiral(hw = FALSE) #> Welcome to the admiral family!"},{"path":"https://pharmaverse.github.io/admiralci/reference/tweak_yml_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Tweak yml url — tweak_yml_url","title":"Tweak yml url — tweak_yml_url","text":"Tweak yml url","code":""},{"path":"https://pharmaverse.github.io/admiralci/reference/tweak_yml_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tweak yml url — tweak_yml_url","text":"","code":"tweak_yml_url(...)"},{"path":"https://pharmaverse.github.io/admiralci/reference/tweak_yml_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tweak yml url — tweak_yml_url","text":"... Arguments pkgdown tweak_page","code":""},{"path":[]},{"path":"https://pharmaverse.github.io/admiralci/news/index.html","id":"new-features-0-0-1","dir":"Changelog","previous_headings":"","what":"New Features","title":"admiralci 0.0.1","text":"Initial package release!","code":""}]
