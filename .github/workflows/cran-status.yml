---
name: CRAN Status

on:
  workflow_dispatch:
  workflow_call:
    inputs:
      issue-assignees:
        description: |
          Whom should the issue be assigned to if errors are
          encountered in the CRAN status checks?
          This is a comma-separated string of GitHub usernames.
          If undefined or empty, no assignments are made.
        default: ''
        required: false
        type: string
      status-types:
        description: |
          Create an issue if one or more of the following
          statuses are reported on the check report.
          This is a comma-separated string of statuses.
          Allowed statuses are 'NOTE', 'WARNING', and 'ERROR'
        default: 'ERROR'
        required: false
        type: string
      path:
        description: |
          Path to the R package root, if the package is not at the
          top level of the repository.
        default: '.'
        required: false
        type: string

concurrency:
  group: cran-status-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  cran-status:
    name: Check Status
    runs-on: ubuntu-latest
    container:
      image: rocker/tidyverse:latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Get Date
        id: today
        run: echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT

      - name: Check Status
        run: Rscript ./.github/scripts/R/check_status.R
        working-directory: ${{ inputs.path }}

      - name: Update cran_status branch
        run: |
          cran_status_path=./${{ inputs.path }}/cran_errors.csv
          if test -f "$cran_status_path"; then
            # if cran_status exists (ie if there are errors) => read cran status file
            cat "$cran_status_path" > $current_status_content
            # then checkout to cran_status branch.
            git checkout --orphan cran_status 2&>1 $checkout_output
            mkdir -p cran_status
            # read previous cran status from this branch (ls sort files by alphabetic number)
            last_status_file=$(ls ./cran_status | tail -n 1)
            last_status_content=$(cat "./cran_status/$last_status_file")
            # check if the status is a new error:
            if [ "$current_status_content" = "$last_status_content" ]; then
              echo "New errors on the cran status found"
              # save this new status to this current branch
              echo $current_status_content > "./cran_status/${GITHUB_OUTPUT}.csv"
              git add .
              git commit -m "add new cran status ${GITHUB_OUTPUT}"
              git push
              exit(1)
            fi
          fi
        

      - name: Report Status
        if: failure()
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "URGENT! Failed CRAN Checks: ${{ steps.today.outputs.date }}"
          content-filepath: ./${{ inputs.path }}/cran-status.md
          assignees: ${{ inputs.issue-assignees }}
