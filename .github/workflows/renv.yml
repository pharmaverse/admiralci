---
name: Propagate renv.lock

on:
  workflow_dispatch:
    inputs:
      file-to-propagate:
        description: |
          Name of the file that should be propagated
          to input.repositories
        required: true
        default: renv.lock
        type: string
      repositories:
        description: |
          List of repositories to propagate file to.
        required: true
        default: |
          {
            "repos":
            [
              "walkowif-test-org/repo-to-copy",
              "walkowif-test-org/gh-to-gh"
            ]
          }
        type: string
  # pull_request:
  #   types:
  #     - opened
  #     - synchronize
  #     - reopened
  #     - ready_for_review
  #   branches:
  #     - main
  #     - devel
  #     - pre-release
  push:
    branches:
      - 2_use_common_renv_lock

# TODO find and replace:
# 'renv.lock.test' -> 'renv.lock'



jobs:
  setup-matrix:
    name: Setup matrix
    runs-on: ubuntu-20.04
    steps:
      - name: Setup
        id: setup
        run: |
          echo ::set-output name=matrix-combinations:: ${{ github.event.input.repositories }}
    outputs:
      matrix-combinations: ${{ steps.setup.outputs.matrix-combinations }}

  renv:
    name: Propagate renv.lock
    runs-on: ubuntu-20.04
    strategy:
      matrix: ${{ fromJson(needs.setup-matrix.outputs.matrix-combinations) }}
          # - pharmaverse/admiralonco
          # - pharmaverse/admiraldev
          # - pharmaverse/admiraltemplate
          # - pharmaverse/admiralophtha
          # - pharmaverse/admiral
          # - pharmaverse/admiral.test


    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check if renv.lock changed
        id: changed-files-specific
        uses: tj-actions/changed-files@v29.0.4
        with:
          files: ${{ inputs.file-to-propagate }}

      - name: Prepare to renv propagation
        id: prepare
        if: steps.changed-files-specific.outputs.any_changed == 'true'
        run: |
          echo "Propagating ${{ inputs.file-to-propagate }} to ${{ matrix.repos }} repository"
          cat renv.lock.test
          echo "::set-output name=renv_changed::true"

      - name: Checkout extension repo
        if: steps.prepare.outputs.renv_changed == 'true'
        uses: actions/checkout@v3
        with:
          repository: ${{ matrix.repos }}
          path: './repo'
          token: ${{ secrets.WALKOWIF_TOKEN }}

      - name: Update renv.lock in extension repo
        if: steps.prepare.outputs.renv_changed == 'true'
        run: |
          cd repo && git status
          # Update local branch if remote branch already exists
          git fetch origin automated-renv-lock-propagation || true
          # Switch to the branch or create if doesn't exist
          git checkout automated-renv-lock-propagation || git checkout -b automated-renv-lock-propagation
          git pull origin automated-renv-lock-propagation || true
          cp ../renv.lock.test .
          git add renv.lock.test
          git diff --cached
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Actions"
          git commit -m "Update renv.lock" || true
          git push origin automated-renv-lock-propagation || echo "No changes to commit"

      - name: Create Pull Request
        if: steps.prepare.outputs.renv_changed == 'true'
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.WALKOWIF_TOKEN }}
          script: |
            const result = await github.rest.pulls.list({
              owner: "${{ matrix.repos }}".split("/")[0],
              repo: "${{ matrix.repos }}".split("/")[1],
              state: "open"
            })
            let create_new_pr = true;
            for (const pr of result.data) {
              if (pr.head.ref === "automated-renv-lock-propagation") {
                console.log("PR with head ref " + pr.head.ref + " already exists");
                create_new_pr = false;
              }
            }
            if (create_new_pr) {
              console.log("Creating a new PR");
              const result2 = await github.rest.pulls.create({
                title: 'Propagate renv.lock',
                owner: "${{ matrix.repos }}".split("/")[0],
                repo: "${{ matrix.repos }}".split("/")[1],
                head: 'automated-renv-lock-propagation',
                base: 'main',
                body: 'This PR is auto-generated by'
              });
            }
