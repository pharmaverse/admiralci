on:
  workflow_dispatch:
  workflow_call:
    inputs:
      error-on:
        description: Input for the 'error_on' parameter in rcmdcheck::rcmdcheck()
        required: false
        default: note
        type: string
  push:
    branches:
      - main
      - devel
      - pre-release
  pull_request:
    branches:
      - main
      - devel
      - pre-release

name: R CMD Check

concurrency:
  group: r-cmd-check-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    if: >
      !contains(github.event.commits[0].message, '[skip r-cmd-check]')
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: ubuntu-22.04, r: '4.0', repos: 'https://packagemanager.posit.co/cran/2021-03-31/'}
          - {os: ubuntu-22.04, r: '4.1', repos: 'https://packagemanager.posit.co/cran/2022-03-10/'}
          - {os: ubuntu-22.04, r: 'release', repos: 'https://packagemanager.rstudio.com/cran/__linux__/focal/latest'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: true
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      R_REPOS: ${{ matrix.config.repos }}

    steps:
      ##################### BEGIN boilerplate steps #####################
      - name: Get branch names
        id: branch-name
        uses: tj-actions/branch-names@v5.4

      - name: Checkout repo (PR) ðŸ›Ž
        uses: actions/checkout@v3
        if: github.event_name == 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Checkout repository
        uses: actions/checkout@v3
        if: github.event_name != 'pull_request'
        with:
          ref: ${{ steps.branch-name.outputs.head_ref_branch }}

      - name: Setup R
        uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Restore cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.R_LIBS_USER }}
            ~/.staged.dependencies
          key: ${{ runner.os }}-r-${{ matrix.config.r }}-${{ hashFiles('DESCRIPTION') }}
          restore-keys: ${{ runner.os }}-r-${{ matrix.config.r }}

      - name: Run Staged dependencies
        uses: insightsengineering/staged-dependencies-action@fix-remotes-self-install
        with:
          run-system-dependencies: true
          enable-check: false
          renv-restore: false
          cran-repos: "CRAN=${{ matrix.config.repos }}"
          upgrade-remotes: true
        env:
          GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      #####################c#####################
